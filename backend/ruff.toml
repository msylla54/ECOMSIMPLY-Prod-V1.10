# Configuration Ruff pour ECOMSIMPLY Backend
target-version = "py311"
line-length = 88
indent-width = 4

# Répertoires à exclure
extend-exclude = [
    "__pycache__",
    ".git",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    "htmlcov",
]

[lint]
# Règles activées
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
]

# Règles ignorées
ignore = [
    "E501",   # line too long (géré par le formateur)
    "S101",   # assert utilisé (OK dans les tests)
    "T201",   # print statements (parfois nécessaire)
    "S608",   # possible SQL injection (trop de faux positifs)
    "N818",   # Exception should be named with an Error suffix
]

# Règles par fichier
[lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",   # assert utilisé
    "PLR2004", # Magic value used in comparison
    "PT011",  # pytest.raises() is too broad
]
"conftest.py" = ["F401"]  # imported but unused

[format]
# Formatage automatique
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[lint.isort]
# Configuration pour les imports
known-first-party = [
    "modules",
    "models", 
    "routes",
    "services",
    "utils",
    "webhooks"
]
section-order = [
    "future",
    "standard-library", 
    "third-party",
    "first-party",
    "local-folder"
]