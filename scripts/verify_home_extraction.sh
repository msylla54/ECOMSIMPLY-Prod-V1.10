#!/bin/bash

# ================================================================================
# ECOMSIMPLY - SCRIPT DE V√âRIFICATION EXTRACTION PAGE D'ACCUEIL
# ================================================================================

set -e  # Exit on error

echo "üîç V√âRIFICATION DE L'EXTRACTION PAGE D'ACCUEIL ECOMSIMPLY"
echo "========================================================"

# Couleurs pour output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Variables
README_FILE="/app/EXTRACTION_HOME_README.md"
ARCHIVE_FILE="/app/EXTRACTION_HOME_CODE.tar.gz"
EXTRACT_DIR="/tmp/home_extract"
TESTS_PASSED=0
TESTS_TOTAL=5

echo -e "${BLUE}üìã Tests de v√©rification de l'extraction${NC}"
echo

# ================================================================================
# TEST 1: V√©rifier l'existence du README
# ================================================================================

echo -n "Test 1/5: V√©rification existence README... "
if [ -f "$README_FILE" ]; then
    echo -e "${GREEN}‚úÖ PASS${NC}"
    TESTS_PASSED=$((TESTS_PASSED + 1))
else
    echo -e "${RED}‚ùå FAIL - README manquant${NC}"
fi

# ================================================================================
# TEST 2: V√©rifier l'existence de l'archive
# ================================================================================

echo -n "Test 2/5: V√©rification existence archive... "
if [ -f "$ARCHIVE_FILE" ]; then
    echo -e "${GREEN}‚úÖ PASS${NC}"
    TESTS_PASSED=$((TESTS_PASSED + 1))
    
    # V√©rifier l'int√©grit√© de l'archive
    echo -n "         V√©rification int√©grit√© archive... "
    if tar -tzf "$ARCHIVE_FILE" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ PASS${NC}"
    else
        echo -e "${RED}‚ùå FAIL - Archive corrompue${NC}"
    fi
else
    echo -e "${RED}‚ùå FAIL - Archive manquante${NC}"
fi

# ================================================================================
# TEST 3: V√©rifier le contenu du README
# ================================================================================

echo -n "Test 3/5: V√©rification contenu README... "
if grep -q "LandingPage" "$README_FILE" && grep -q "App.js" "$README_FILE"; then
    echo -e "${GREEN}‚úÖ PASS${NC}"
    TESTS_PASSED=$((TESTS_PASSED + 1))
else
    echo -e "${RED}‚ùå FAIL - Contenu README incomplet${NC}"
fi

# ================================================================================
# TEST 4: V√©rifier les fichiers extraits
# ================================================================================

echo -n "Test 4/5: V√©rification fichiers extraits... "
if [ -d "$EXTRACT_DIR" ]; then
    FILE_COUNT=$(find "$EXTRACT_DIR" -name "*.js" -o -name "*.css" | wc -l)
    if [ "$FILE_COUNT" -ge 10 ]; then
        echo -e "${GREEN}‚úÖ PASS ($FILE_COUNT fichiers)${NC}"
        TESTS_PASSED=$((TESTS_PASSED + 1))
    else
        echo -e "${RED}‚ùå FAIL - Pas assez de fichiers ($FILE_COUNT/10+)${NC}"
    fi
else
    echo -e "${RED}‚ùå FAIL - R√©pertoire d'extraction manquant${NC}"
fi

# ================================================================================
# TEST 5: V√©rifier la pr√©sence des composants essentiels
# ================================================================================

echo -n "Test 5/5: V√©rification composants essentiels... "
REQUIRED_FILES=(
    "frontend/src/index.js"
    "frontend/src/App.js"
    "frontend/src/App.css"
    "frontend/src/components/SubscriptionManager.js"
)

ALL_FOUND=true
for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$EXTRACT_DIR/$file" ]; then
        ALL_FOUND=false
        echo -e "\n${RED}   ‚ùå Fichier manquant: $file${NC}"
    fi
done

if $ALL_FOUND; then
    echo -e "${GREEN}‚úÖ PASS${NC}"
    TESTS_PASSED=$((TESTS_PASSED + 1))
else
    echo -e "${RED}‚ùå FAIL - Fichiers essentiels manquants${NC}"
fi

# ================================================================================
# R√âSUM√â FINAL
# ================================================================================

echo
echo -e "${BLUE}üìä R√âSUM√â DE LA V√âRIFICATION${NC}"
echo "================================="

if [ -f "$README_FILE" ]; then
    README_SIZE=$(du -h "$README_FILE" | cut -f1)
    echo -e "üìÑ README: ${GREEN}$README_SIZE${NC}"
fi

if [ -f "$ARCHIVE_FILE" ]; then
    ARCHIVE_SIZE=$(du -h "$ARCHIVE_FILE" | cut -f1)
    echo -e "üì¶ Archive: ${GREEN}$ARCHIVE_SIZE${NC}"
fi

if [ -d "$EXTRACT_DIR" ]; then
    FILE_COUNT=$(find "$EXTRACT_DIR" -type f | wc -l)
    echo -e "üìÅ Fichiers extraits: ${GREEN}$FILE_COUNT${NC}"
fi

echo -e "‚úÖ Tests r√©ussis: ${GREEN}$TESTS_PASSED/$TESTS_TOTAL${NC}"

# ================================================================================
# R√âSULTAT FINAL
# ================================================================================

echo
if [ "$TESTS_PASSED" -eq "$TESTS_TOTAL" ]; then
    echo -e "${GREEN}üéâ EXTRACTION VALID√âE AVEC SUCC√àS !${NC}"
    echo -e "${GREEN}Tous les tests sont pass√©s. L'extraction est compl√®te et pr√™te √† utiliser.${NC}"
    exit 0
else
    echo -e "${RED}‚ùå EXTRACTION INCOMPL√àTE${NC}"
    echo -e "${RED}$((TESTS_TOTAL - TESTS_PASSED)) test(s) ont √©chou√©. Veuillez corriger les probl√®mes.${NC}"
    exit 1
fi